// Code generated by gowsdl DO NOT EDIT.

package currency

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ConvertCurrencyRequest struct {
	XMLName xml.Name `xml:"http://practice-2/soap ConvertCurrencyRequest"`

	Amount float64 `xml:"amount,omitempty" json:"amount,omitempty"`

	FromCurrency string `xml:"fromCurrency,omitempty" json:"fromCurrency,omitempty"`

	ToCurrency string `xml:"toCurrency,omitempty" json:"toCurrency,omitempty"`
}

type ConvertCurrencyResponse struct {
	XMLName xml.Name `xml:"http://practice-2/soap ConvertCurrencyResponse"`

	ConvertedAmount float64 `xml:"convertedAmount,omitempty" json:"convertedAmount,omitempty"`

	FromCurrency string `xml:"fromCurrency,omitempty" json:"fromCurrency,omitempty"`

	ToCurrency string `xml:"toCurrency,omitempty" json:"toCurrency,omitempty"`

	Rate float64 `xml:"rate,omitempty" json:"rate,omitempty"`
}

type CurrencyConversionPortType interface {
	ConvertCurrency(request *ConvertCurrencyRequest) (*ConvertCurrencyResponse, error)

	ConvertCurrencyContext(ctx context.Context, request *ConvertCurrencyRequest) (*ConvertCurrencyResponse, error)
}

type currencyConversionPortType struct {
	client *soap.Client
}

func NewCurrencyConversionPortType(client *soap.Client) CurrencyConversionPortType {
	return &currencyConversionPortType{
		client: client,
	}
}

func (service *currencyConversionPortType) ConvertCurrencyContext(ctx context.Context, request *ConvertCurrencyRequest) (*ConvertCurrencyResponse, error) {
	response := new(ConvertCurrencyResponse)
	err := service.client.CallContext(ctx, "http://practice-2/soap/ConvertCurrency", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *currencyConversionPortType) ConvertCurrency(request *ConvertCurrencyRequest) (*ConvertCurrencyResponse, error) {
	return service.ConvertCurrencyContext(
		context.Background(),
		request,
	)
}
